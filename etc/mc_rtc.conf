{
  // What robot is being controlled
  "MainRobot" : "HRP2DRC",

  //"Enabled" : ["Posture", "Body6d", "CoM", "Seq", "Driving", "Egress", "EgressMRQP", "BCISelfInteract"],
  "Enabled"   : ["CoM"],

  // If multiple controllers are enable, default can be used to decide which
  // will be enabled first, this defaults to the first controller enabled
  //"Default"   : "Body6d",

  // If this option is set to true, mc_rtc will handle the update of the real
  // robot itself, you might want to set to false to test new state estimation
  // features
  // "UpdateReal" : true,

  // If this option is set to true, the sensor input for position and
  // orientation will be used to update the real robot's free flyer,
  // otherwise, the controller state is used
  // "UpdateRealFromSensors" : false,

  // Publish the state of the controlled robot (ROS)
  "PublishControlState" : true,

  // Publish the state of the other robots (ROS)
  "PublishEnvState" : true,

  // Publish the state of the real robot (ROS)
  "PublishRealState" : true,

  // Timestep of publication (ROS)
  "PublishTimestep" : 0.01,

  // Controller timestep
  "Timestep" : 0.005,

  // Set to true or false to enable/disable respectively
  "Log" : true,

  // LogPolicy dictates whether logging-related disk operations happen in a
  // separate thread ("threaded") or in the same thread as the run() loop
  // ("non-threaded"). This defaults to the non-threaded policy. On real-time
  // systems, the threaded policy is advised
  // "LogPolicy" : "threaded",

  // LogDirectory dictates where the log files will be stored, defaults to
  // system temp directory "LogDirectory" : "/tmp",

  // The log file will have the name [LogTemplate]-[ControllerName]-[date].log
  "LogTemplate" : "mc-control",

  // The following option change the verbosity of the controller and robot
  // loader
  "VerboseLoader" : true

  // The following option is used to disable controller/robot creation sandboxing
  // This option only affects Linux
  // "UseSandbox": true

  // The following options are used to control the location of the
  // controllers' and robots' modules (libraries)
  // The paths added by this option are added to the default path
  //"ControllerModulePath" : "/a/single/path/to/controller/directory/"
  //"ControllerModulePath" : ["/one/path/to/controller/", "/another/path/"]
  //"RobotModulePath" : "/a/single/path/to/robot/directory/"
  //"RobotModulePath" : ["/one/path/to/robot/", "/another/path/"]

  // The following options are used to clear the default loading path
  // for controllers and robots respectively
  // This is only useful to run test on a machine where mc_rtc has
  // already been installed
  //"ClearControllerModulePath" : false
  //"ClearRobotModulePath" : false
}
